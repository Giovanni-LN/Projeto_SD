generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TheaterPiece {
  id        Int        @id @default(autoincrement())
  name      String
  sessions  Session[]  // Lista de sessões (datas e horários) para a peça
}

model Session {
  id             Int       @id @default(autoincrement())
  date           DateTime  // Data da apresentação
  time           DateTime  // Horário da apresentação
  theaterPieceId Int
  theaterPiece   TheaterPiece @relation(fields: [theaterPieceId], references: [id])
  seats          Seat[]    // Lista de assentos
}

model Seat {
  id         Int      @id @default(autoincrement())
  row        String   // Linha do assento (A, B, C, D, E, F, G)
  number     Int      // Número do assento
  status     String   // Status do assento (livre, ocupado)
  sessionId  Int
  session    Session  @relation(fields: [sessionId], references: [id])
  pagamentos Pagamento[]
}

model Pagamento {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")

  seat      Seat     @relation(fields: [seatId], references: [id], onDelete: Cascade)
  seatId    Int      // Removido @unique para permitir múltiplos pagamentos

  @@map("pagamentos")
}

enum statusAssento {
  OCUPADO
  LIVRE
}
